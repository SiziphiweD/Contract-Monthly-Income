@model IEnumerable<PROG_POE.Models.Claim>

@{
    ViewData["Title"] = "Manager Dashboard";
}

<h1>@ViewData["Title"]</h1>

<!-- Filter Form -->
<form method="get" class="mb-3">
    <label for="statusFilter">Filter by Status:</label>
    <select id="statusFilter" name="status" class="form-select w-auto d-inline-block">
        <option value="">All</option>
        <option value="Pending">Pending</option>
        <option value="Approved">Approved</option>
        <option value="Rejected">Rejected</option>
    </select>
    <button type="submit" class="btn btn-primary">Filter</button>
</form>

<table class="table table-striped table-bordered">
    <thead class="table-dark">
        <tr>
            <th>@Html.DisplayNameFor(model => model.HoursWorked)</th>
            <th>@Html.DisplayNameFor(model => model.HourlyRate)</th>
            <th>@Html.DisplayNameFor(model => model.TotalPayment)</th>
            <th>@Html.DisplayNameFor(model => model.AdditionalNotes)</th>
            <th>@Html.DisplayNameFor(model => model.ClaimStatus)</th>
            <th>@Html.DisplayNameFor(model => model.SubmittedAt)</th>
            <th>@Html.DisplayNameFor(model => model.ApprovedAt)</th>
            <th>@Html.DisplayNameFor(model => model.Lecturer)</th>
            <th>Proof</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.HoursWorked)</td>
                <td>@Html.DisplayFor(modelItem => item.HourlyRate)</td>
                <td>@Html.DisplayFor(modelItem => item.TotalPayment)</td>
                <td>@Html.DisplayFor(modelItem => item.AdditionalNotes)</td>
                <td>
                    @if (item.ClaimStatus == "Pending")
                    {
                        <form method="post" asp-action="UpdateStatus" class="d-inline">
                            <input type="hidden" name="claimId" value="@item.ClaimId" />
                            <button type="submit" name="claimStatus" value="Approved" class="btn btn-sm btn-success">Approve</button>
                            <button type="submit" name="claimStatus" value="Rejected" class="btn btn-sm btn-danger">Reject</button>
                        </form>
                    }
                    else
                    {
                        <span>Status already: @item.ClaimStatus</span>
                    }
                </td>


                <td>@Html.DisplayFor(modelItem => item.SubmittedAt)</td>
                <td>@Html.DisplayFor(modelItem => item.ApprovedAt)</td>
                <td>@Html.DisplayFor(modelItem => item.Lecturer.FullName)</td>
                <!-- Display Documents -->
                <td>
                    @if (item.SupportingDocuments != null && item.SupportingDocuments.Count > 0)
                    {
                        foreach (var doc in item.SupportingDocuments)
                        {
                            <p>@doc.FileName</p>
                            <a href="@Url.Action("DownloadDocument", "Managers", new { id = doc.DocumentId })" class="btn btn-link">Download</a>
                        }
                    }
                    else
                    {
                        <p>No Document uploaded</p>
                    }
                </td>

                <!-- Action Links -->
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ClaimId" class="btn btn-sm btn-warning">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.ClaimId" class="btn btn-sm btn-info">Details</a>
                    <a asp-action="Delete" asp-route-id="@item.ClaimId" class="btn btn-sm btn-danger"
                       onclick="return confirm('Are you sure you want to delete this claim?');">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
